{"version":3,"sources":["App.js","Emotion.js","index.js"],"names":["socket","Emotion","icon","setIcon","blocked","undefined","EmotionIcon","Icon","setTimeout","className","App","useState","stream","setStream","myId","setMyId","callId","setCallId","callAccepted","setCallAccepted","callRecieve","setCallRecieve","caller","setCaller","title","position","type","text","date","Date","messages","setMessage","messInput","setMessInput","emotion","setEmotion","emotionBlocked","setEmotionBlocked","myVideo","useRef","parnerVideo","acceptCall","pear","Pear","initiator","trickle","on","data","emit","to","id","signal","message","success","current","srcObject","mess","error","off","destroy","declineCall","from","handleEmotion","useEffect","io","navigator","mediaDevices","getUserMedia","video","audio","then","console","log","Modal","confirm","okText","onOk","cancelText","onCancel","style","boxShadow","placement","margin","fontSize","fontWeight","onClick","clipboard","writeText","padding","cursor","width","placeholder","onChange","e","target","value","block","hide","loading","span","height","background","autoPlay","ref","lockable","toBottomHeight","dataSource","onPressEnter","allowClear","LikeFilled","DislikeFilled","HeartFilled","SmileFilled","display","checkedChildren","unCheckedChildren","defaultChecked","val","status","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5062697.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport { Result, Row, Col, Input, Button, message, Modal, Tag, PageHeader, Tooltip, Space, Switch } from 'antd'\r\nimport { MessageList, Input as MsInput, Button as MsButton } from 'react-chat-elements'\r\nimport io from 'socket.io-client'\r\nimport Pear from 'simple-peer'\r\nimport 'antd/dist/antd.css'\r\nimport 'react-chat-elements/dist/main.css'\r\nimport './style.css'\r\n\r\nimport { LikeFilled, DislikeFilled, HeartFilled, SmileFilled } from '@ant-design/icons'\r\nimport Emotion from './Emotion'\r\nlet socket\r\nexport default function App() {\r\n  const [stream, setStream] = useState()\r\n  const [myId, setMyId] = useState()\r\n  const [callId, setCallId] = useState()\r\n  const [callAccepted, setCallAccepted] = useState(false)\r\n  const [callRecieve, setCallRecieve] = useState()\r\n  const [caller, setCaller] = useState()\r\n  const [messages, setMessage] = useState([\r\n    {\r\n      title: 'RealTalk - BOT',\r\n      position: 'left',\r\n      type: 'text',\r\n      text: 'Chào mừng đến với RealTalk!',\r\n      date: new Date(),\r\n    }\r\n  ])\r\n  const [messInput, setMessInput] = useState()\r\n  const [emotion, setEmotion] = useState()\r\n  const [emotionBlocked, setEmotionBlocked] = useState(false)\r\n\r\n  const myVideo = useRef()\r\n  const parnerVideo = useRef()\r\n\r\n\r\n  useEffect(() => {\r\n    socket = io('http://localhost:3001')\r\n\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: false }).then(stream => {\r\n      setStream(stream)\r\n      myVideo.current.srcObject = stream\r\n    })\r\n\r\n    socket.on('myID', id => {\r\n      setMyId(id)\r\n    })\r\n\r\n    socket.on('notFound', to => {\r\n      console.log('Not found ID', to)\r\n      message.error('Không tìm thấy ID')\r\n    })\r\n\r\n    socket.on('message', ({ from, message }) => {\r\n      setMessage(mess => [\r\n        ...mess,\r\n        {\r\n          title: from,\r\n          position: 'left',\r\n          type: 'text',\r\n          text: message,\r\n          date: new Date()\r\n        }\r\n      ])\r\n    })\r\n\r\n    socket.on('emotion', icon => {\r\n      setEmotion(icon)\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    socket.on('rang', ({ signal, from }) => {\r\n      console.log({ callAccepted })\r\n      if (callAccepted) {\r\n        console.log('busy from', from)\r\n        socket.emit('busy', { to: from, from: myId })\r\n      } else {\r\n        setCallRecieve(true)\r\n        setCaller({ id: from, signal })\r\n      }\r\n    })\r\n  }, [callAccepted])\r\n\r\n  useEffect(() => {\r\n    if (caller && callRecieve && !callAccepted) {\r\n      Modal.confirm({\r\n        title: `Cuộc gọi từ ${caller?.id}`,\r\n        okText: 'Chấp nhận',\r\n        onOk: acceptCall,\r\n        cancelText: 'Từ chối',\r\n        onCancel: declineCall\r\n      })\r\n    }\r\n  }, [caller])\r\n\r\n  function handleCall() {\r\n    if (callId === myId) {\r\n      message.error('Mã ID không được hợp lệ')\r\n      return\r\n    }\r\n    const pear = new Pear({\r\n      initiator: true,\r\n      trickle: false,\r\n      stream\r\n    })\r\n\r\n    const hide = message.loading('Đang gọi...', 0)\r\n\r\n    pear.on('signal', data => {\r\n      socket.emit('call', { to: callId, signal: data, from: myId })\r\n    })\r\n\r\n    pear.on('stream', stream => {\r\n      message.success('Kết nối thành công!')\r\n      parnerVideo.current.srcObject = stream\r\n      setMessage(mess => [\r\n        ...mess,\r\n        {\r\n          title: 'RealTalk - BOT',\r\n          position: 'left',\r\n          type: 'text',\r\n          text: `${callId} đã tham gia cuộc gọi. Hãy thử trò chuyện với nhau!`,\r\n          date: new Date()\r\n        }\r\n      ])\r\n    })\r\n\r\n    socket.on('busy', from => {\r\n      hide()\r\n      message.error(`${from} đang bận!`)\r\n\r\n      socket.off('busy')\r\n      socket.off('callDeclined')\r\n      socket.off('callAccepted')\r\n      socket.off('endCall')\r\n      pear.destroy()\r\n    })\r\n\r\n    socket.on('callAccepted', signal => {\r\n      hide()\r\n      setCallAccepted(true)\r\n      pear.signal(signal)\r\n    })\r\n\r\n    socket.on('callDeclined', from => {\r\n      hide()\r\n      message.error(`${from} đã từ chối cuộc gọi`)\r\n\r\n      socket.off('busy')\r\n      socket.off('callDeclined')\r\n      socket.off('callAccepted')\r\n      socket.off('endCall')\r\n      pear.destroy()\r\n    })\r\n\r\n    socket.on('endCall', () => {\r\n      message.error(`Cuộc gọi đã kết thúc`)\r\n\r\n      socket.off('busy')\r\n      socket.off('callDeclined')\r\n      socket.off('callAccepted')\r\n      socket.off('endCall')\r\n      setCallId(undefined)\r\n      setCallAccepted(false)\r\n      pear.destroy()\r\n    })\r\n  }\r\n\r\n  function acceptCall() {\r\n    setCallAccepted(true)\r\n    const pear = new Pear({\r\n      initiator: false,\r\n      trickle: false,\r\n      stream\r\n    })\r\n\r\n    pear.on('signal', data => {\r\n      socket.emit('accept', { to: caller?.id, signal: data })\r\n    })\r\n\r\n    pear.on('stream', stream => {\r\n      message.success('Kết nối thành công!')\r\n      parnerVideo.current.srcObject = stream\r\n      setMessage(mess => [\r\n        ...mess,\r\n        {\r\n          title: 'RealTalk - BOT',\r\n          position: 'left',\r\n          type: 'text',\r\n          text: `${caller?.id} đã tham gia cuộc gọi. Hãy thử trò chuyện với nhau!`,\r\n          date: new Date()\r\n        }\r\n      ])\r\n    })\r\n\r\n    pear.signal(caller?.signal)\r\n\r\n    socket.on('endCall', () => {\r\n      message.error(`Cuộc gọi đã kết thúc`)\r\n\r\n      socket.off('endCall')\r\n      setCaller(undefined)\r\n      setCallAccepted(false)\r\n      pear.destroy()\r\n    })\r\n  }\r\n\r\n  function declineCall() {\r\n    socket.emit('decline', { to: caller?.id, from: myId })\r\n  }\r\n\r\n  function handleEnd() {\r\n    setCallAccepted(false)\r\n    socket.emit('end', { to: caller?.id || callId, from: myId })\r\n  }\r\n\r\n  function handleSendMessage(message) {\r\n    socket.emit('send', { to: caller?.id || callId, from: myId, message })\r\n    setMessage(mess => [\r\n      ...mess,\r\n      {\r\n        title: 'Bạn',\r\n        position: 'right',\r\n        type: 'text',\r\n        text: message,\r\n        date: new Date()\r\n      }\r\n    ])\r\n    setMessInput('')\r\n  }\r\n\r\n  function handleIdClick() {\r\n    navigator.clipboard.writeText(myId).then(() => {\r\n      message.success('Đã sao chép')\r\n    })\r\n  }\r\n\r\n  function handleEmotion(icon){\r\n    setEmotion(icon)\r\n    socket.emit('emotion', { to: caller?.id || callId, icon })\r\n  }\r\n\r\n  if (!navigator.mediaDevices && !navigator.mediaDevices.getUserMedia) {\r\n    return <Result status='500' title='Trình duyệt không tương thích!' />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <PageHeader title='RealTalk' style={{ boxShadow: '0px 1px 5px gray' }} />\r\n      <Row>\r\n        <Tooltip title='Nhấn để sao chép' placement='right'>\r\n          <div style={{ margin: '20px auto', fontSize: '20px', fontWeight: 'bold' }}>\r\n            Mã ID: <Tag onClick={handleIdClick} style={{ padding: '10px 20px', fontSize: 22, cursor: 'pointer' }}>{myId}</Tag>\r\n          </div>\r\n        </Tooltip>\r\n      </Row>\r\n      <Row>\r\n        <div style={{ width: 400, margin: '0px auto' }}>\r\n          <Input placeholder=\"Nhập ID...\" style={{ margin: '10px 0' }} onChange={e => setCallId(e.target.value)} value={callId} />\r\n          <Button style={{ margin: '10px 0' }} block type='primary' onClick={handleCall}>Gọi</Button>\r\n          {callAccepted && <Button block type='danger' onClick={handleEnd}>Kết thúc</Button>}\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col span={8} style={{ padding: 10 }}>\r\n          <video style={{ width: '100%', height: 250, background: 'black' }} autoPlay ref={myVideo}></video>\r\n          <div>\r\n            <MessageList\r\n              className='message-list'\r\n              lockable={true}\r\n              toBottomHeight={300}\r\n              dataSource={messages}\r\n            />\r\n            <Input\r\n              placeholder='Nhập tin nhắn...'\r\n              value={messInput}\r\n              onChange={e => setMessInput(e.target.value)}\r\n              onPressEnter={e => handleSendMessage(e.target.value)}\r\n              allowClear\r\n              style={{ margin: '10px 0' }}\r\n            />\r\n            <Space>\r\n              <Button icon={<LikeFilled />} onClick={() => handleEmotion('LikeFilled')} />\r\n              <Button icon={<DislikeFilled />} onClick={() => handleEmotion('DislikeFilled')} />\r\n              <Button icon={<HeartFilled />} onClick={() => handleEmotion('HeartFilled')} />\r\n              <Button icon={<SmileFilled />} onClick={() => handleEmotion('SmileFilled')} />\r\n            </Space>\r\n            <Switch\r\n              style={{display:'block', margin: '10px 0'}}\r\n              checkedChildren='Biểu cảm đang bật'\r\n              unCheckedChildren='Biểu cảm đang tắt'\r\n              defaultChecked\r\n              onChange={(val) => setEmotionBlocked(!val)}\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col span={16} style={{ padding: '10px 10px 10px 0' }}>\r\n          <video style={{ width: '100%', height: '90vh', background: 'black' }} autoPlay ref={parnerVideo}></video>\r\n        </Col>\r\n      </Row>\r\n      <Emotion icon={emotion} setIcon={setEmotion} blocked={emotionBlocked}/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport * as Icon from '@ant-design/icons'\r\nimport './emotion.css'\r\n\r\nexport default function Emotion({ icon, setIcon, blocked }) {\r\n  if (blocked) {\r\n    setIcon(undefined)\r\n  } \r\n  else if (icon) {\r\n    const EmotionIcon = Icon[icon]\r\n    setTimeout(() => {setIcon(undefined)}, 2000)\r\n    return (\r\n      <div className='like'>\r\n        <EmotionIcon />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return <></>\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}